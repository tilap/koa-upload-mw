{"version":3,"sources":["../../src/lib/assertValidators.js"],"names":["validators","data","validator","res","Error","message"],"mappings":";;;;;;AAAA;;;;;;;;AAEA;AACA;;uDACe,iBAAgBA,UAAhB,EAA4BC,IAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACWD,UADX;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACFE,qBADE;AAAA;AAAA;AAAA,mBAGSA,UAAUD,IAAV,CAHT;;AAAA;AAGHE,eAHG;;AAAA,kBAILA,QAAQ,KAJH;AAAA;AAAA;AAAA;;AAAA,kBAKD,IAAIC,KAAJ,CAAU,QAAV,CALC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAQH,yBAAoB,YAAMC,OAA1B,CARG;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"assertValidators.js","sourcesContent":["import ValidationError from '../errors/Validation';\n\n// Process an ordered list of function (forced as promise) and throw a ValidationError on the first\n// one failing or returning false\nexport default async function (validators, data) {\n  for (const validator of validators) { // eslint-disable-line no-restricted-syntax\n    try {\n      const res = await validator(data); // eslint-disable-line no-await-in-loop\n      if (res === false) {\n        throw new Error('failed');\n      }\n    } catch (error) {\n      throw new ValidationError(error.message);\n    }\n  }\n}\n"]}