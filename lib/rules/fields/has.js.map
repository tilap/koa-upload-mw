{"version":3,"sources":["../../../src/rules/fields/has.js"],"names":["fieldId","errorMessage","callback","constructor","String","Function","request","method","body","fields","Error"],"mappings":";;;;;;kBAEe,UAAUA,OAAV,EAAmBC,YAAnB,EAAkD;AAAA;;AAAA,MAAjBC,QAAiB,uEAAN,IAAM;;AAC/D,wBAAOF,OAAP,EAAgB,0DAAhB;AACA,wBAAOA,QAAQG,WAAR,KAAwBC,MAA/B,EAAuC,0BAAvC;AACA,wBAAO,CAACF,QAAD,IAAaA,SAASC,WAAT,KAAyBE,QAA7C,EAAuD,6BAAvD;;AAEA;AAAA,yDAAO;AAAA,UAASC,OAAT,SAASA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEH,CAACA,OAAD,IACA,CAACA,QAAQC,MAAT,KAAoB,MADpB,IAEA,CAACD,QAAQE,IAFT,IAGA,CAACF,QAAQE,IAAR,CAAaC,MAHd,IAIA,CAACH,QAAQE,IAAR,CAAaC,MAAb,CAAoBT,OAApB,CANE;AAAA;AAAA;AAAA;;AAAA,oBAOG,IAAIU,KAAJ,CAAUT,mCAAiCD,OAA3C,CAPH;;AAAA;AAAA,+CAUEE,WACLA,SAASI,QAAQE,IAAR,CAAaC,MAAb,CAAoBT,OAApB,CAAT,CADK,GAEL,IAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAcD,C;;AArBD","file":"has.js","sourcesContent":["import assert from 'assert';\n\nexport default function (fieldId, errorMessage, callback = null) {\n  assert(fieldId, 'no fieldId provided in configuration for auth middleware');\n  assert(fieldId.constructor === String, 'fieldId must be a string');\n  assert(!callback || callback.constructor === Function, 'Callback must be a function');\n\n  return async ({ request }) => {\n    if (\n      !request ||\n      !request.method === 'POST' ||\n      !request.body ||\n      !request.body.fields ||\n      !request.body.fields[fieldId]) {\n      throw new Error(errorMessage || `missing field ${fieldId}`);\n    }\n\n    return callback ?\n      callback(request.body.fields[fieldId]) :\n      true;\n  };\n}\n"]}